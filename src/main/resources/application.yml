spring:
  profiles:
    active: local
    group:
      local: local,common,secret
      blue: blue,common,secret
      green: green,common,secret

server:
    env: blue

---

spring:
  config:
    activate:
      on-profile: local
  security:
    oauth2:
      client:
        registration:
          google:
            redirect-uri:
              "http://localhost:8080/login/oauth2/code/google"
          kakao:
            redirect-uri: "http://localhost:8080/login/oauth2/code/kakao"

server:
  port: 8080
  serverAddress: localhost

serverName: local_server
---


spring:
  config:
    activate:
      on-profile: blue
  security:
    oauth2:
      client:
        registration:
          google:
            redirect-uri:
              "http://52.79.50.171/login/oauth2/code/google"
          kakao:
            redirect-uri: "http://52.79.50.171/login/oauth2/code/kakao"

server:
  port: 8080
  serverAddress: 52.79.50.171

serverName: blue_server
---


spring:
  config:
    activate:
      on-profile: green
  security:
    oauth2:
      client:
        registration:
          google:
            redirect-uri:
              "http://52.79.50.171/login/oauth2/code/google"
          kakao:
            redirect-uri: "http://52.79.50.171/login/oauth2/code/kakao"

server:
  port: 8081
  serverAddress: 52.79.50.171

serverName: green_server
---

spring:
  config:
    activate:
      on-profile: common
  application:
    name: project
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        jdbc:
          time_zone: UTC
    hibernate:
      ddl-auto: update
    defer-datasource-initialization: true
    show-sql: true


  datasource:
    url: jdbc:mysql://${MYSQL_DOMAIN_V2}:3306/database-1?&rewriteBatchedStatements=true
    username: root
    password: ${MYSQL_PWD_V2}
    driver-class-name: com.mysql.cj.jdbc.Driver

  sql:
    init:
      mode: always

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_OAUTH_ID}
            client-secret: ${GOOGLE_OAUTH_SECRET}
            redirect-uri: ${DOMAIN}/login/oauth2/code/google
            scope:
              - profile
              - email
          kakao:
            client-id: ${KAKAO_OAUTH_ID}
            client-secret: ${KAKAO_OAUTH_SECRET}
            redirect-uri: ${DOMAIN}/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope: profile_nickname, profile_image, account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id



  jwt:
    secret: ${SECURITY_SECRET}


  data:
    redis:
      host: ${REDIS_DOMAIN_V2}
      port: 6379
      password: ${REDIS_PWD_V2}
  ai:
    openai:
      api-key: ${OPENAI_API_KEY}

logging:
  level:
    org:
    springframework:
      security: DEBUG


cloud:
  aws:
    region: ap-northeast-2
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key:  ${AWS_SECRET_KEY}
  s3:
    bucket: ${AWS_S3_BUCKET}
    url: ${AWS_S3_URL}
  stack:
    auto: false

frontend:
  url: ${FRONTEND_URL}

jwt:
  token-expiration:
    access: 86400
    refresh: 2592000

kakao:
  api:
    url: "https://dapi.kakao.com/v2/${DOMAIN}/geo/coord2address.json"
    key: ${KAKAO_REST_API_KEY}
    Nopeurl: "https://dapi.kakao.com/v2/local/search/address.json?query="